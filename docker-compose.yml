services:
  db:
    image: postgres:17
    container_name: nusaloka-db
    restart: unless-stopped
    ports:
      - '${DB_PORT}:5432'
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - nusaloka

  redis:
    image: redis:7
    container_name: nusaloka-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASS}
    ports:
      - '${REDIS_PORT}:6379'
    volumes:
      - redis_data:/data
    networks:
      - nusaloka
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit
    restart: unless-stopped
    volumes:
      - mailpit_data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: true
      MP_SMTP_AUTH_ALLOW_INSECURE: true
    networks:
      - nusaloka
    healthcheck:
      test: ["CMD-SHELL", "wget", "--spider", "-q", "http://localhost:8025"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  gateway:
    build: 
      context: .
      dockerfile: ./docker/gateway/Dockerfile
    container_name: api-gateway
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nusaloka

  account-service:
    build: 
      context: .
      dockerfile: ./docker/account/Dockerfile
    container_name: account-service
    ports:
      - ${ACCOUNT_SERVICE_PORT}:${ACCOUNT_SERVICE_PORT}
    env_file:
      - .env.docker
    depends_on:
      - db
      - redis
      - mailpit
    healthcheck:
      test: ["CMD-SHELL", "curl", "-f", "http://localhost:9001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - nusaloka

  trip-service:
    build: 
      context: .
      dockerfile: ./docker/trip/Dockerfile
    container_name: trip-service
    ports:
      - ${TRIP_SERVICE_PORT}:${TRIP_SERVICE_PORT}
    env_file:
      - .env
    networks:
      - nusaloka

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitored/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT}:9090"
    networks:
      - nusaloka
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    networks:
      - nusaloka
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana

  loki:
    image: grafana/loki:latest
    container_name: loki
    command:
     - "-config.expand-env=true"
     - "-config.file=/etc/loki/loki-config.yaml"
    ports:
      - "${LOKI_PORT}:3100"
      - 7946
      - 9095
    volumes:
      - ./monitored/loki-config.yaml:/etc/loki/loki-config.yaml
      - ./monitored/loki-data:/loki
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nusaloka

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - "${PROMTAIL_PORT}:9080"
    networks:
      - nusaloka
    volumes:
      - /var/log:/var/log
      - ./monitored/promtail-config.yml:/etc/promtail/promtail.yaml
    command: -config.file=/etc/promtail/promtail.yaml

volumes:
  pg_data:
  redis_data:
  mailpit_data:
  grafana_data:

networks:
  nusaloka:
    driver: bridge
